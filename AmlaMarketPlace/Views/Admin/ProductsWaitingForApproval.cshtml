@model IEnumerable<AmlaMarketPlace.Models.DTO.ProductDTO>

@{
    ViewData["Title"] = "Products Waiting For Approval";
    int SrNo = 1;
}

<div class="all-Users-list-div">
    <div class="container">
        <div class="all-Users-list-div-heading">
            <h3>Products waiting for approval</h3>
        </div>
        <div class="table-responsive">
            @if (TempData["ProductApproved"] != null)
            {
                <div class="alert alert-info">
                    @TempData["ProductApproved"]
                </div>
            }
            @if (TempData["FailedToApproved"] != null)
            {
                <div class="alert alert-info">
                    @TempData["FailedToApproved"]
                </div>
            }
            @if (TempData["ProductRejected"] != null)
            {
                <div class="alert alert-info">
                    @TempData["ProductRejected"]
                </div>
            }
            @if (TempData["FailedToReject"] != null)
            {
                <div class="alert alert-info">
                    @TempData["FailedToReject"]
                </div>
            }
            @if (Model == null || !Model.Any()) // Check if the list is empty
            {
                <div class="alert alert-warning">
                    No products are waiting for approval.
                </div>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Sr. No.</th>
                            <th>@Html.DisplayNameFor(model => model.ProductId)</th>
                            <th>@Html.DisplayNameFor(model => model.UserId)</th>
                            <th>@Html.DisplayNameFor(model => model.Name)</th>
                            <th>@Html.DisplayNameFor(model => model.Price)</th>
                            <th>@Html.DisplayNameFor(model => model.Description)</th>
                            <th>@Html.DisplayNameFor(model => model.CreatedOn)</th>
                            <th>@Html.DisplayNameFor(model => model.ModifiedOn)</th>
                            <th>@Html.DisplayNameFor(model => model.Inventory)</th>
                            <th>@Html.DisplayNameFor(model => model.StatusValue)</th>
                            @* <th>@Html.DisplayNameFor(model => model.IsPublished)</th> *@
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@SrNo</td>
                                <td>@Html.DisplayFor(modelItem => item.ProductId)</td>
                                <td>@Html.DisplayFor(modelItem => item.UserId)</td>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>@Html.DisplayFor(modelItem => item.CreatedOn)</td>
                                <td>@Html.DisplayFor(modelItem => item.ModifiedOn)</td>
                                <td>@Html.DisplayFor(modelItem => item.Inventory)</td>
                                <td>@Html.DisplayFor(modelItem => item.StatusValue)</td>
                                @* <td>@Html.DisplayFor(modelItem => item.IsPublished)</td> *@
                                <td>
                                    @if (item.StatusValue == "Pending")
                                    {
                                        <form asp-action="Approve" asp-route-id="@item.ProductId" method="post">
                                            <button type="submit" class="btn btn-brand-color approve-reject-btn">Approve</button>
                                        </form>
                                        <button type="button" class="btn btn-danger approve-reject-btn"
                                                data-toggle="modal"
                                                data-target="#rejectModal"
                                                data-id="@item.ProductId">
                                            Reject
                                        </button>
                                    }
                                </td>
                            </tr>
                            SrNo++; // Incrementing Serial Number
                        }
                    </tbody>
                </table>
            }

        </div>
    </div>
</div>
<!-- Reject Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1" role="dialog" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectModalLabel">Reject Product</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="rejectForm" asp-action="Reject" method="post">
                <div class="modal-body">
                    <input type="hidden" id="productId" name="ProductId" />
                    <div class="form-group">
                        <label for="rejectComment">Reason for Rejection</label>
                        <textarea id="rejectComment" required name="RejectComment" class="form-control" placeholder="Enter your reason for rejection" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Reject</button>
                </div>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            $('#rejectForm').on('submit', function (e) {
                // Get the trimmed value of the comment field
                var comment = $('#rejectComment').val().trim();

                // Check if the comment is empty
                if (!comment) {
                    e.preventDefault(); // Prevent form submission
                    alert("Rejection comment cannot be empty or whitespace. Please provide a valid reason.");
                } else {
                    // Ensure the trimmed value is sent
                    $('#rejectComment').val(comment);
                }
            });

            // Set Product ID in Modal
            $('#rejectModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var productId = button.data('id');  // Extract Product ID from data-* attributes
                var modal = $(this);
                modal.find('#productId').val(productId);
            });
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
}


