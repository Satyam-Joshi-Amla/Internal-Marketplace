@model AmlaMarketPlace.Models.ViewModels.Product.EditProductViewModel

<div class="edit-product-mainDiv container">
    <div class="edit-product-div-heading text-center">
        <h3>Edit Product</h3>
    </div>

    <hr />
    <form asp-action="EditProduct" id="edit-product-form" enctype="multipart/form-data">
        <input type="number" asp-for="ProductId" name="ProductId" value=@Model.ProductId hidden />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <!-- Product Name -->
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Name" class="control-label required"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>

            <!-- Price -->
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Price" class="control-label required"></label>
                    <input asp-for="Price" class="form-control" type="number" step="0.01" min="1" max="9999999" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
            </div>

            <!-- Inventory -->
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Inventory" class="control-label required"></label>
                    <input asp-for="Inventory" class="form-control" type="number" min="1" max="99999" />
                    <span asp-validation-for="Inventory" class="text-danger"></span>
                </div>
            </div>

            <!-- Description -->
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>

            <!-- Default Image -->
            <div class="col-md-6">
                <div class="form-group">
                    <label class="required" for="DefaultImage">Product Default Image</label>
                    <input asp-for="Image" type="file" id="Image" class="form-control" accept="image/*" />
                    <span asp-validation-for="Image" class="text-danger"></span>
                    <br />
                    @if (Model.Images.Any(i => i.IsDefault))
                    {
                        <img src="@Url.Content(Model.Images.First(i => i.IsDefault).ImagePath)" width="100" alt="Current Default Image" />
                    }
                </div>
            </div>

            <!-- Optional Images -->
            <div class="col-md-6">
                <div class="form-group">
                    <label for="OptionalImages">Additional Images (max 9)</label>
                    <input asp-for="OptionalImages" type="file" id="OptionalImages" accept="image/*" multiple class="form-control" />
                    <span asp-validation-for="OptionalImages" class="text-danger"></span>
                    <br />
                    @foreach (var image in Model.Images.Where(i => !i.IsDefault))
                    {
                        <img src="@Url.Content(image.ImagePath)" width="100" alt="Current Optional Image" />
                    }
                </div>
            </div>
        </div>

        <div class="edit-and-close-button">
            <button type="button" class="btn btn-brand-color" data-bs-toggle="modal" data-bs-target="#confirmationModal">
                Save
            </button>
        </div>
    </form>

    <div class="back-button">
        <button class="btn btn-brand-color" onclick="history.back()">Back</button>
    </div>
</div>

<!-- Confirmation Modal -->
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Confirm Save</h5>
                <button type="button" class="btn" data-bs-dismiss="modal" aria-label="Close">X</button>
            </div>
            <div class="modal-body">
                Are you sure you want to save the changes and send for approval?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirm-save" class="btn btn-primary">Yes, Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script>
            // Allowed file extensions
            const allowedExtensions = ['jpg', 'png'];

            // Validate Default Image
            document.getElementById("Image").addEventListener("change", function () {
                const file = this.files[0];
                if (file) {
                    const extension = file.name.split('.').pop().toLowerCase();
                    if (!allowedExtensions.includes(extension)) {
                        alert("Only .jpg and .png files are allowed for the default image.");
                        this.value = ""; // Clear the input
                    }
                }
            });

            // Validate Optional Images
            document.getElementById("OptionalImages").addEventListener("change", function () {
                const files = this.files;
                if (files.length === 0) {
                    return;
                }

                // Check if more than 9 files are selected
                if (files.length > 9) {
                    alert("You can only upload a maximum of 9 optional images.");
                    this.value = ""; // Clear the input
                    return; // Exit the function
                }
                for (let i = 0; i < files.length; i++) {
                    const extension = files[i].name.split('.').pop().toLowerCase();
                    if (!allowedExtensions.includes(extension)) {
                        alert("Only .jpg and .png files are allowed for additional images.");
                        this.value = ""; // Clear the input
                        break;
                    }
                }
            });

            // Confirm Save Button
            document.getElementById('confirm-save').addEventListener('click', function () {
                document.getElementById('edit-product-form').submit();
            });
        </script>
    }
}
